package sistema_restaurante.sistema.persistencia;

public class Lista<T> {
	// ATRIBUTO
	private Nodo<T> begin;
	private Nodo<T> active;
	

	
	// CONSTRUTOR
	public Lista() {
		begin = null;
	}
	
	
	
	// METODOS FUNCIONAIS
	public void insertBegin(T value) {
		Nodo<T> newNodo = new Nodo<T>(value);
	
		if (isEmpty()) {
			begin = newNodo;
			newNodo.setNext(null);
			newNodo.setBack(null);
		} else {
			newNodo.setNext(begin);
			begin.setBack(newNodo);
			begin = newNodo;
		}
		
		active = begin;
	}
	
	public void insertEnd(T value) {
		Nodo<T> newNodo = new Nodo<T>(value);
		
		if (isEmpty()) {
			begin = newNodo;
			begin.setNext(null);
			begin.setBack(null);
		}
	}
	
	public void deleteIndex() {
		
	}
	
	public boolean isEmpty() {
		return begin == null;
	}
	 
	public boolean hasNext() {
		if (active == null) {
			active = begin;
			return false;
		} else {
			return true;
		}
	}
		
	public T next() {
		Nodo<T> aux = active;
		active = aux.getNext();
		return aux.getValue();
	}
	
	
	
	// GETTERS AND SETTERS
	public Nodo<T> getBegin() {
		return begin;
	}
	public void setBegin(Nodo<T> begin) {
		this.begin = begin;
	}
	public Nodo<T> getActive() {
		return active;
	}
	public void setActive(Nodo<T> active) {
		this.active = active;
	}
}
